{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFoundPage.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFoundPage","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d630d967.chunk.js","sourcesContent":["import React, {Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context=React.createContext();\r\n\r\nconst reducer =(state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.filter(contact =>\r\n                contact.id !== action.payload)\r\n        }\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:[action.payload,\r\n            ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.map(contact=>\r\n                contact.id===action.payload.id ? (contact\r\n                    =action.payload) : contact)\r\n                \r\n        };\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport class Provider extends Component{\r\n     state={\r\n         contacts:[],\r\n         dispatch:action => this.setState(state=>\r\n            reducer(state,action))\r\n     }\r\n\r\n    async componentDidMount(){\r\n       const res =await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({\r\n        contacts:res.data\r\n            }) \r\n    }\r\n     \r\n     render(){ \r\n         return(\r\n             <Context.Provider value={this.state}>\r\n                 {this.props.children}\r\n             </Context.Provider>\r\n         )\r\n     }\r\n}\r\n\r\nexport const Consumer= Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n class Contact extends Component {\r\n   state={\r\n     showContactInfo:false\r\n   };\r\n\r\n   onShowClick=(e)=>{\r\n    this.setState({showContactInfo:!this.state.showContactInfo})\r\n  };\r\n     \r\n  onDeleteClick=async(id,dispatch)=>{\r\n await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({type:'DELETE_CONTACT',payload:id})\r\n  };\r\n\r\n  render() {\r\n\r\n      const {id,name,email,phone}=this.props.contact;\r\n      const {showContactInfo}=this.state;\r\n\r\n\r\n    return (\r\n        <Consumer>\r\n        {value=>{\r\n          const {dispatch} = value;\r\n          return(\r\n          <div className=\"card card-body mb-3\">\r\n              <h4>{name} <i onClick={this.onShowClick} \r\n                  className=\"fas fa-sort-down\"\r\n                style={{cursor:'pointer'}}\r\n                  />\r\n            <i onClick={this.onDeleteClick.bind(this,id,dispatch)} \r\n            className=\"fas fa-times\" \r\n            style={{cursor:'pointer',float:'right',color:'red'}}\r\n              ></i>\r\n\r\n              <Link to={`contact/edit/${id}`}>\r\n                <i className=\"fas fa-pencil-alt\"\r\n                style={{\r\n                  cursor:'pointer',\r\n                  float:'right',\r\n                  color:'black',\r\n                  marginRight:'1rem'\r\n                \r\n                }}></i>\r\n              </Link>\r\n            </h4>\r\n            {showContactInfo ? (<ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email:{email}</li>\r\n            <li className=\"list-group-item\">Phone:{phone}</li>\r\n            </ul>) : null}\r\n      </div>\r\n          )\r\n        }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n}\r\n    \r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n class Contacts extends Component {\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n      {value =>{\r\n        const {contacts}=value;\r\n        return (\r\n      <React.Fragment>\r\n      <h1 className=\"display-4 mb-2\">\r\n        <span className='text-danger'>Contact</span> List\r\n      </h1>\r\n        {contacts.map(contact=>(\r\n            <Contact key={contact.id} contact={contact}/>\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n      }}\r\n      </Consumer>\r\n    );    \r\n  }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst  Header= (props)=> {\r\n    const {branding}=props;\r\n  return (\r\n   <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n     <div className=\"container\">\r\n       <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n       <div>\r\n         <ul className=\"navbar-nav mr-auto\">\r\n           <li className=\"nav-item\">\r\n             <Link to=\"/\" className=\"nav-link\">\r\n             <i className=\"fas fa-home\"></i>  Home</Link>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n             <Link to=\"/contact/add\" className=\"nav-link\">\r\n             <i className=\"fas fa-plus\"></i> Add</Link>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n             <Link to=\"/about\" className=\"nav-link\">\r\n             <i className=\"fas fa-question\"></i> About</Link>\r\n           </li>\r\n         </ul>\r\n       </div>\r\n     </div>\r\n   </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps={\r\n    branding:'My app'\r\n};\r\n\r\nHeader.propTypes={\r\n    branding:PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default ()=> {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manger</h1>\r\n      <p className='lead'>simple app to manage contacts</p>\r\n      <p className=\"text-secondary\"> version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ()=>{\r\n  return (\r\n    <div>\r\n<h1 className=\"display-4\"><span className='text-danger'>404</span> Page Found</h1>\r\n<p className='lead'>Sorry,that page does not exit</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup=({\r\n    label,name,value,placeholder,type,onChange,error\r\n})=> {\r\n  return (\r\n      <div className=\"form-group\">\r\n                  <label htmlFor={name}>{label}</label>\r\n                  <input type={type}\r\n                        name={name}\r\n                      className={classnames('form-control form-control-lg',{\r\n                        'is-invalid':error\r\n                      })}\r\n                      placeholder={placeholder}\r\n                      value={value}\r\n                      onChange={onChange}\r\n                  />\r\n                  {error && <div className='invalid-feedback'>\r\n                  {error}\r\n\r\n                  </div> }\r\n                  \r\n              </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes={\r\n  label: PropTypes.string.isRequired,\r\n  name:PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error:PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps={\r\n  type:'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{ }\r\n    };\r\n\r\n    onChange=(e)=>this.setState({[e.target.name]: e.target.value})\r\n\r\n    onSubmit=async(dispatch,e)=>{\r\n        e.preventDefault();\r\n       const {name,email,phone}=this.state;\r\n\r\n\r\n       //error check\r\n       if(name===''){\r\n          this.setState({errors:{name:'Name is required'}})\r\n        return;\r\n        }\r\n       if (email === '') {\r\n         this.setState({\r\n           errors: {\r\n             email: 'Email is required'\r\n           }\r\n         })\r\n         return;\r\n       }\r\n       if(phone===''){\r\n          this.setState({errors:{phone:'phone is required'}})\r\n        return;\r\n        }\r\n\r\n       const newContact={\r\n         name,\r\n         email,\r\n         phone\r\n       };\r\n\r\n      const res=await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n\r\n        dispatch({type:'ADD_CONTACT',payload:res.data})\r\n\r\n       //clear state\r\n       this.setState({\r\n         name: '',\r\n           email: '',\r\n           phone: '',\r\n           errors:{}\r\n       });\r\n\r\n       this.props.history.push('/');\r\n\r\n    }\r\n  render() {\r\n\r\n      const {name,email,phone,errors}=this.state;\r\n      return(\r\n          <Consumer>\r\n          {value=>{\r\n            const {dispatch}=value;\r\n            return(\r\n               <div className='card mb-3'>\r\n      <div className=\"card-header\">Add Contact</div>\r\n      <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n              <TextInputGroup label='Name'\r\n                name='name' \r\n                placeholder='Enter Name..'\r\n                value={name}\r\n                 onChange={this.onChange}\r\n                 error={errors.name}\r\n\r\n              />\r\n               <TextInputGroup label='Email'\r\n                name='email' \r\n                placeholder = 'Enter Email..'\r\n                value={email}\r\n                 onChange={this.onChange}\r\n                 error={errors.email}\r\n              />\r\n             <TextInputGroup label='phone'\r\n                name = 'phone'\r\n                placeholder = 'Enter phone..'\r\n                value={phone}\r\n                 onChange={this.onChange}\r\n                 error={errors.phone}\r\n              />  \r\n              <input type=\"submit\" value=\"Add Contact\"\r\n                  className='btn btn-light btn-block'\r\n              />\r\n          </form>\r\n      </div>\r\n      </div>\r\n            )\r\n          }}\r\n\r\n          </Consumer>\r\n\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{ }\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        const res=await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact=res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        })\r\n    }\r\n\r\n    onChange=(e)=>this.setState({[e.target.name]: e.target.value})\r\n\r\n    onSubmit=async(dispatch,e)=>{\r\n        e.preventDefault();\r\n       const {name,email,phone}=this.state;\r\n\r\n\r\n       //error check\r\n       if(name===''){\r\n          this.setState({errors:{name:'Name is required'}})\r\n        return;\r\n        }\r\n       if (email === '') {\r\n         this.setState({\r\n           errors: {\r\n             email: 'Email is required'\r\n           }\r\n         })\r\n         return;\r\n       }\r\n       if(phone===''){\r\n          this.setState({errors:{phone:'phone is required'}})\r\n        return;\r\n        }\r\n\r\n        const updContact={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id}=this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n            dispatch({type:'UPDATE_CONTACT',payload:res.data})\r\n       //clear state\r\n       this.setState({\r\n         name: '',\r\n           email: '',\r\n           phone: '',\r\n           errors:{}\r\n       });\r\n\r\n       this.props.history.push('/');\r\n\r\n    }\r\n  render() {\r\n\r\n      const {name,email,phone,errors}=this.state;\r\n      return(\r\n          <Consumer>\r\n          {value=>{\r\n            const {dispatch}=value;\r\n            return(\r\n               <div className='card mb-3'>\r\n      <div className=\"card-header\">Edit Contact</div>\r\n      <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n              <TextInputGroup label='Name'\r\n                name='name' \r\n                placeholder='Enter Name..'\r\n                value={name}\r\n                 onChange={this.onChange}\r\n                 error={errors.name}\r\n\r\n              />\r\n               <TextInputGroup label='Email'\r\n                name='email' \r\n                placeholder = 'Enter Email..'\r\n                value={email}\r\n                 onChange={this.onChange}\r\n                 error={errors.email}\r\n              />\r\n             <TextInputGroup label='phone'\r\n                name = 'phone'\r\n                placeholder = 'Enter phone..'\r\n                value={phone}\r\n                 onChange={this.onChange}\r\n                 error={errors.phone}\r\n              />  \r\n              <input type=\"submit\" value=\"Update Contact\"\r\n                  className='btn btn-light btn-block'\r\n              />\r\n          </form>\r\n      </div>\r\n      </div>\r\n            )\r\n          }}\r\n\r\n          </Consumer>\r\n\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default EditContact;","import React, { Component} from 'react';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Provider} from './context';\n\n\nclass App extends Component {\n  render() {\n    return ( \n      <Provider>\n      <Router>\n      <div className = \"App\" >\n      <Header branding=\"Contact Manager\"/>\n      <div className=\"container\">\n      <Switch>\n        <Route exact path='/' component={Contacts}/>\n        <Route exact path='/contact/add' component={AddContact}/>\n        <Route exact path='/contact/edit/:id' component={EditContact}/>\n        <Route exact path='/about' component={About}/>\n        <Route component={NotFoundPage}/>\n      </Switch>\n      </div>\n       </div>\n       </Router>\n       </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}